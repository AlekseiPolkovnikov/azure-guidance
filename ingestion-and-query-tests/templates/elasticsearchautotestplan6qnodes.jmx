<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.8" jmeter="2.13 r1665067">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="6 Node Ingestion and Query Test" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="BulkInsertLarge" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${__P(nthreads)}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1444691932000</longProp>
        <longProp name="ThreadGroup.end_time">1444691932000</longProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">${__P(duration)}</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <JUnitSampler guiclass="JUnitTestSamplerGui" testclass="JUnitSampler" testname="logtoLarge" enabled="true">
          <stringProp name="junitSampler.classname">elasticsearchtest3.ElasticSearchLoadTest3</stringProp>
          <stringProp name="junitsampler.constructorstring">${__P(elasticip)},${__P(indexname)},ctip,9300,${__P(clustername)},0</stringProp>
          <stringProp name="junitsampler.method">DataInsertDcuTest</stringProp>
          <stringProp name="junitsampler.pkg.filter"></stringProp>
          <stringProp name="junitsampler.success">Test successful</stringProp>
          <stringProp name="junitsampler.success.code">1000</stringProp>
          <stringProp name="junitsampler.failure">Test failed</stringProp>
          <stringProp name="junitsampler.failure.code">2000</stringProp>
          <stringProp name="junitsampler.error">test failed</stringProp>
          <stringProp name="junitsampler.error.code">9999</stringProp>
          <stringProp name="junitsampler.exec.setup">true</stringProp>
          <stringProp name="junitsampler.append.error">true</stringProp>
          <stringProp name="junitsampler.append.exception">true</stringProp>
          <boolProp name="junitsampler.junit4">true</boolProp>
        </JUnitSampler>
        <hashTree/>
      </hashTree>
      <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <threadCounts>true</threadCounts>
          </value>
        </objProp>
        <stringProp name="filename">${__P(report1)}.csv</stringProp>
        <boolProp name="ResultCollector.success_only_logging">true</boolProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">true</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <threadCounts>true</threadCounts>
          </value>
        </objProp>
        <stringProp name="filename">${__P(report2)}.csv</stringProp>
      </ResultCollector>
      <hashTree/>
      <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.TransactionsPerSecondGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Transactions per Second" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <threadCounts>true</threadCounts>
          </value>
        </objProp>
        <stringProp name="filename">${__P(report3)}.csv</stringProp>
        <longProp name="interval_grouping">1000</longProp>
        <boolProp name="graph_aggregated">true</boolProp>
        <stringProp name="include_sample_labels"></stringProp>
        <stringProp name="exclude_sample_labels"></stringProp>
        <stringProp name="start_offset"></stringProp>
        <stringProp name="end_offset"></stringProp>
        <boolProp name="include_checkbox_state">false</boolProp>
        <boolProp name="exclude_checkbox_state">false</boolProp>
      </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
      <hashTree/>
      <kg.apc.jmeter.perfmon.PerfMonCollector guiclass="kg.apc.jmeter.vizualizers.PerfMonGui" testclass="kg.apc.jmeter.perfmon.PerfMonCollector" testname="Custom Disk" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <threadCounts>true</threadCounts>
          </value>
        </objProp>
        <stringProp name="filename">${__P(report4)}.csv</stringProp>
        <longProp name="interval_grouping">1000</longProp>
        <boolProp name="graph_aggregated">false</boolProp>
        <stringProp name="include_sample_labels"></stringProp>
        <stringProp name="exclude_sample_labels"></stringProp>
        <stringProp name="start_offset"></stringProp>
        <stringProp name="end_offset"></stringProp>
        <boolProp name="include_checkbox_state">false</boolProp>
        <boolProp name="exclude_checkbox_state">false</boolProp>
        <collectionProp name="metricConnections">
          <collectionProp name="-1381602475">
            <stringProp name="1344178535">${__P(m1)}</stringProp>
            <stringProp name="1600768">4444</stringProp>
            <stringProp name="2142353">EXEC</stringProp>
            <stringProp name="1555176765">label=large1:sh:-c:vmstat   1 5  | awk &apos;BEGIN { line=0;total=0;}{line=line+1;if(line&gt;1){total=total+$16;}}END{print total/4}&apos;es</stringProp>
          </collectionProp>
          <collectionProp name="-970446719">
            <stringProp name="1344179496">${__P(m2)}</stringProp>
            <stringProp reference="../../collectionProp/stringProp[2]"/>
            <stringProp name="2142353">EXEC</stringProp>
            <stringProp name="-546040210">label=large2:sh:-c:vmstat   1 5  | awk &apos;BEGIN { line=0;total=0;}{line=line+1;if(line&gt;1){total=total+$16;}}END{print total/4}&apos;</stringProp>
          </collectionProp>
          <collectionProp name="-340343174">
            <stringProp name="1344180457">${__P(m3)}</stringProp>
            <stringProp reference="../../collectionProp/stringProp[2]"/>
            <stringProp name="2142353">EXEC</stringProp>
            <stringProp name="1222533627">label=large3:sh:-c:vmstat   1 5  | awk &apos;BEGIN { line=0;total=0;}{line=line+1;if(line&gt;1){total=total+$16;}}END{print total/4}&apos;es</stringProp>
          </collectionProp>
          <collectionProp name="1182629589">
            <stringProp name="1344181418">${__P(m4)}</stringProp>
            <stringProp reference="../../collectionProp/stringProp[2]"/>
            <stringProp reference="../../collectionProp/stringProp[3]"/>
            <stringProp name="-1091271590">label=large4:sh:-c:vmstat   1 5  | awk &apos;BEGIN { line=0;total=0;}{line=line+1;if(line&gt;1){total=total+$16;}}END{print total/4}&apos;es</stringProp>
          </collectionProp>
          <collectionProp name="598421152">
            <stringProp name="1344182379">${__P(m5)}</stringProp>
            <stringProp reference="../../collectionProp/stringProp[2]"/>
            <stringProp reference="../../collectionProp[2]/stringProp[3]"/>
            <stringProp name="309305547">label=large5:sh:-c:vmstat   1 5  | awk &apos;BEGIN { line=0;total=0;}{line=line+1;if(line&gt;1){total=total+$16;}}END{print total/4}&apos;</stringProp>
          </collectionProp>
          <collectionProp name="-565050051">
            <stringProp name="1344183340">${__P(m6)}</stringProp>
            <stringProp reference="../../collectionProp/stringProp[2]"/>
            <stringProp reference="../../collectionProp[3]/stringProp[3]"/>
            <stringProp name="-1423914728">label=large6:sh:-c:vmstat   1 5  | awk &apos;BEGIN { line=0;total=0;}{line=line+1;if(line&gt;1){total=total+$16;}}END{print total/4}&apos;es</stringProp>
          </collectionProp>
        </collectionProp>
      </kg.apc.jmeter.perfmon.PerfMonCollector>
      <hashTree/>
      <kg.apc.jmeter.perfmon.PerfMonCollector guiclass="kg.apc.jmeter.vizualizers.PerfMonGui" testclass="kg.apc.jmeter.perfmon.PerfMonCollector" testname="CPU Metrics" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <threadCounts>true</threadCounts>
          </value>
        </objProp>
        <stringProp name="filename">${__P(report5)}.csv</stringProp>
        <longProp name="interval_grouping">1000</longProp>
        <boolProp name="graph_aggregated">false</boolProp>
        <stringProp name="include_sample_labels"></stringProp>
        <stringProp name="exclude_sample_labels"></stringProp>
        <stringProp name="start_offset"></stringProp>
        <stringProp name="end_offset"></stringProp>
        <boolProp name="include_checkbox_state">false</boolProp>
        <boolProp name="exclude_checkbox_state">false</boolProp>
        <collectionProp name="metricConnections">
          <collectionProp name="-329978744">
            <stringProp name="1344178535">${__P(m1)}</stringProp>
            <stringProp name="1600768">4444</stringProp>
            <stringProp name="66952">CPU</stringProp>
            <stringProp name="-664186529">label=large1</stringProp>
          </collectionProp>
          <collectionProp name="1618360838">
            <stringProp name="1344179496">${__P(m2)}</stringProp>
            <stringProp name="1600768">4444</stringProp>
            <stringProp name="66952">CPU</stringProp>
            <stringProp name="-664186528">label=large2</stringProp>
          </collectionProp>
          <collectionProp name="-1910065578">
            <stringProp name="1344180457">${__P(m3)}</stringProp>
            <stringProp name="1600768">4444</stringProp>
            <stringProp name="66952">CPU</stringProp>
            <stringProp name="-664186527">label=large3</stringProp>
          </collectionProp>
          <collectionProp name="755849821">
            <stringProp name="1344181418">${__P(m4)}</stringProp>
            <stringProp reference="../../collectionProp/stringProp[2]"/>
            <stringProp reference="../../collectionProp/stringProp[3]"/>
            <stringProp name="-664186526">label=large4</stringProp>
          </collectionProp>
          <collectionProp name="-1590777893">
            <stringProp name="1344182379">${__P(m5)}</stringProp>
            <stringProp reference="../../collectionProp[2]/stringProp[2]"/>
            <stringProp reference="../../collectionProp[2]/stringProp[3]"/>
            <stringProp name="-664186525">label=large5</stringProp>
          </collectionProp>
          <collectionProp name="1098285113">
            <stringProp name="1344183340">${__P(m6)}</stringProp>
            <stringProp reference="../../collectionProp[3]/stringProp[2]"/>
            <stringProp reference="../../collectionProp[3]/stringProp[3]"/>
            <stringProp name="-664186524">label=large6</stringProp>
          </collectionProp>
        </collectionProp>
      </kg.apc.jmeter.perfmon.PerfMonCollector>
      <hashTree/>
      <kg.apc.jmeter.perfmon.PerfMonCollector guiclass="kg.apc.jmeter.vizualizers.PerfMonGui" testclass="kg.apc.jmeter.perfmon.PerfMonCollector" testname="Network Metrics" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <threadCounts>true</threadCounts>
          </value>
        </objProp>
        <stringProp name="filename">${__P(report6)}.csv</stringProp>
        <longProp name="interval_grouping">1000</longProp>
        <boolProp name="graph_aggregated">false</boolProp>
        <stringProp name="include_sample_labels"></stringProp>
        <stringProp name="exclude_sample_labels"></stringProp>
        <stringProp name="start_offset"></stringProp>
        <stringProp name="end_offset"></stringProp>
        <boolProp name="include_checkbox_state">false</boolProp>
        <boolProp name="exclude_checkbox_state">false</boolProp>
        <collectionProp name="metricConnections">
          <collectionProp name="1776614247">
            <stringProp name="1344178535">${__P(m1)}</stringProp>
            <stringProp name="1600768">4444</stringProp>
            <stringProp name="-274342153">Network I/O</stringProp>
            <stringProp name="-664186529">label=large1</stringProp>
          </collectionProp>
          <collectionProp name="-570013467">
            <stringProp name="1344179496">${__P(m2)}</stringProp>
            <stringProp name="1600768">4444</stringProp>
            <stringProp name="-274342153">Network I/O</stringProp>
            <stringProp name="-664186528">label=large2</stringProp>
          </collectionProp>
          <collectionProp name="196527413">
            <stringProp name="1344180457">${__P(m3)}</stringProp>
            <stringProp name="1600768">4444</stringProp>
            <stringProp name="-274342153">Network I/O</stringProp>
            <stringProp name="-664186527">label=large3</stringProp>
          </collectionProp>
          <collectionProp name="-1859264401">
            <stringProp reference="../../collectionProp/stringProp"/>
            <stringProp reference="../../collectionProp/stringProp[2]"/>
            <stringProp reference="../../collectionProp/stringProp[3]"/>
            <stringProp name="-1508808152">label=large1:bytessent</stringProp>
          </collectionProp>
          <collectionProp name="687368568">
            <stringProp reference="../../collectionProp[2]/stringProp"/>
            <stringProp reference="../../collectionProp[2]/stringProp[2]"/>
            <stringProp reference="../../collectionProp[2]/stringProp[3]"/>
            <stringProp name="989207785">label=large2:bytessent</stringProp>
          </collectionProp>
          <collectionProp name="737871274">
            <stringProp reference="../../collectionProp[3]/stringProp"/>
            <stringProp reference="../../collectionProp[3]/stringProp[2]"/>
            <stringProp reference="../../collectionProp[3]/stringProp[3]"/>
            <stringProp name="-807743574">label=large3:bytessent</stringProp>
          </collectionProp>
          <collectionProp name="-1432524484">
            <stringProp name="1344181418">${__P(m4)}</stringProp>
            <stringProp reference="../../collectionProp/stringProp[2]"/>
            <stringProp reference="../../collectionProp/stringProp[3]"/>
            <stringProp name="-664186526">label=large4</stringProp>
          </collectionProp>
          <collectionProp name="515815098">
            <stringProp name="1344182379">${__P(m5)}</stringProp>
            <stringProp reference="../../collectionProp[2]/stringProp[2]"/>
            <stringProp reference="../../collectionProp[2]/stringProp[3]"/>
            <stringProp name="-664186525">label=large5</stringProp>
          </collectionProp>
          <collectionProp name="-1090089192">
            <stringProp name="1344183340">${__P(m6)}</stringProp>
            <stringProp reference="../../collectionProp[3]/stringProp[2]"/>
            <stringProp reference="../../collectionProp[3]/stringProp[3]"/>
            <stringProp name="-664186524">label=large6</stringProp>
          </collectionProp>
          <collectionProp name="600232299">
            <stringProp name="1344181418">${__P(m4)}</stringProp>
            <stringProp reference="../../collectionProp/stringProp[2]"/>
            <stringProp reference="../../collectionProp/stringProp[3]"/>
            <stringProp name="1690272363">label=large4:bytessent</stringProp>
          </collectionProp>
          <collectionProp name="-1986482688">
            <stringProp name="1344182379">${__P(m5)}</stringProp>
            <stringProp reference="../../collectionProp[2]/stringProp[2]"/>
            <stringProp reference="../../collectionProp[2]/stringProp[3]"/>
            <stringProp name="-106678996">label=large5:bytessent</stringProp>
          </collectionProp>
          <collectionProp name="-750360434">
            <stringProp name="1344183340">${__P(m6)}</stringProp>
            <stringProp reference="../../collectionProp[3]/stringProp[2]"/>
            <stringProp reference="../../collectionProp[3]/stringProp[3]"/>
            <stringProp name="-1903630355">label=large6:bytessent</stringProp>
          </collectionProp>
        </collectionProp>
      </kg.apc.jmeter.perfmon.PerfMonCollector>
      <hashTree/>
      <kg.apc.jmeter.perfmon.PerfMonCollector guiclass="kg.apc.jmeter.vizualizers.PerfMonGui" testclass="kg.apc.jmeter.perfmon.PerfMonCollector" testname="Disk Metrics" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <threadCounts>true</threadCounts>
          </value>
        </objProp>
        <stringProp name="filename">${__P(report7)}.csv</stringProp>
        <longProp name="interval_grouping">1000</longProp>
        <boolProp name="graph_aggregated">false</boolProp>
        <stringProp name="include_sample_labels"></stringProp>
        <stringProp name="exclude_sample_labels"></stringProp>
        <stringProp name="start_offset"></stringProp>
        <stringProp name="end_offset"></stringProp>
        <boolProp name="include_checkbox_state">false</boolProp>
        <boolProp name="exclude_checkbox_state">false</boolProp>
        <collectionProp name="metricConnections">
          <collectionProp name="-379068268">
            <stringProp name="1344178535">${__P(m1)}</stringProp>
            <stringProp name="1600768">4444</stringProp>
            <stringProp name="2112896831">Disks I/O</stringProp>
            <stringProp name="-586613702">label=large1:readbytes</stringProp>
          </collectionProp>
          <collectionProp name="283033074">
            <stringProp name="1344179496">${__P(m2)}</stringProp>
            <stringProp name="1600768">4444</stringProp>
            <stringProp name="2112896831">Disks I/O</stringProp>
            <stringProp name="1911402235">label=large2:readbytes</stringProp>
          </collectionProp>
          <collectionProp name="1377423573">
            <stringProp name="1344180457">${__P(m3)}</stringProp>
            <stringProp name="1600768">4444</stringProp>
            <stringProp name="2112896831">Disks I/O</stringProp>
            <stringProp name="114450876">label=large3:readbytes</stringProp>
          </collectionProp>
          <collectionProp name="-1112102965">
            <stringProp name="1344178535">${__P(m1)}</stringProp>
            <stringProp reference="../../collectionProp/stringProp[2]"/>
            <stringProp reference="../../collectionProp/stringProp[3]"/>
            <stringProp name="-1572247321">label=large1:writebytes</stringProp>
          </collectionProp>
          <collectionProp name="721963607">
            <stringProp name="1344179496">${__P(m2)}</stringProp>
            <stringProp reference="../../collectionProp[2]/stringProp[2]"/>
            <stringProp reference="../../collectionProp[2]/stringProp[3]"/>
            <stringProp name="-1443164602">label=large2:writebytes</stringProp>
          </collectionProp>
          <collectionProp name="1374207390">
            <stringProp name="1344180457">${__P(m3)}</stringProp>
            <stringProp reference="../../collectionProp[3]/stringProp[2]"/>
            <stringProp reference="../../collectionProp[3]/stringProp[3]"/>
            <stringProp name="-1314081883">label=large3:writebytes</stringProp>
          </collectionProp>
          <collectionProp name="1884502967">
            <stringProp name="1344181418">${__P(m4)}</stringProp>
            <stringProp name="1600768">4444</stringProp>
            <stringProp name="2112896831">Disks I/O</stringProp>
            <stringProp name="-1184999164">label=large4:writebytes</stringProp>
          </collectionProp>
          <collectionProp name="141178060">
            <stringProp name="1344182379">${__P(m5)}</stringProp>
            <stringProp name="1600768">4444</stringProp>
            <stringProp name="2112896831">Disks I/O</stringProp>
            <stringProp name="-1055916445">label=large5:writebytes</stringProp>
          </collectionProp>
          <collectionProp name="1323750013">
            <stringProp name="1344183340">${__P(m6)}</stringProp>
            <stringProp name="1600768">4444</stringProp>
            <stringProp name="2112896831">Disks I/O</stringProp>
            <stringProp name="-926833726">label=large6:writebytes</stringProp>
          </collectionProp>
          <collectionProp name="505121107">
            <stringProp reference="../../collectionProp[7]/stringProp"/>
            <stringProp reference="../../collectionProp[7]/stringProp[2]"/>
            <stringProp reference="../../collectionProp[7]/stringProp[3]"/>
            <stringProp name="-1682500483">label=large4:readbytes</stringProp>
          </collectionProp>
          <collectionProp name="1824367302">
            <stringProp reference="../../collectionProp[8]/stringProp"/>
            <stringProp reference="../../collectionProp[8]/stringProp[2]"/>
            <stringProp reference="../../collectionProp[8]/stringProp[3]"/>
            <stringProp name="815515454">label=large5:readbytes</stringProp>
          </collectionProp>
          <collectionProp name="706688092">
            <stringProp reference="../../collectionProp[9]/stringProp"/>
            <stringProp reference="../../collectionProp[9]/stringProp[2]"/>
            <stringProp name="2112896831">Disks I/O</stringProp>
            <stringProp name="-981435905">label=large6:readbytes</stringProp>
          </collectionProp>
        </collectionProp>
      </kg.apc.jmeter.perfmon.PerfMonCollector>
      <hashTree/>
      <kg.apc.jmeter.perfmon.PerfMonCollector guiclass="kg.apc.jmeter.vizualizers.PerfMonGui" testclass="kg.apc.jmeter.perfmon.PerfMonCollector" testname="Jservers metrics" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <threadCounts>true</threadCounts>
          </value>
        </objProp>
        <stringProp name="filename">${__P(report8)}.csv</stringProp>
        <longProp name="interval_grouping">1000</longProp>
        <boolProp name="graph_aggregated">false</boolProp>
        <stringProp name="include_sample_labels"></stringProp>
        <stringProp name="exclude_sample_labels"></stringProp>
        <stringProp name="start_offset"></stringProp>
        <stringProp name="end_offset"></stringProp>
        <boolProp name="include_checkbox_state">false</boolProp>
        <boolProp name="exclude_checkbox_state">false</boolProp>
        <collectionProp name="metricConnections">
          <collectionProp name="901539351">
            <stringProp name="-1280937523">${__P(js1)}</stringProp>
            <stringProp name="1600768">4444</stringProp>
            <stringProp name="66952">CPU</stringProp>
            <stringProp name="0"></stringProp>
          </collectionProp>
          <collectionProp name="-1707117782">
            <stringProp name="-1280936562">${__P(js2)}</stringProp>
            <stringProp name="1600768">4444</stringProp>
            <stringProp name="66952">CPU</stringProp>
            <stringProp name="0"></stringProp>
          </collectionProp>
          <collectionProp name="-2054883346">
            <stringProp name="-1280937523">${__P(js1)}</stringProp>
            <stringProp reference="../../collectionProp/stringProp[2]"/>
            <stringProp name="-274342153">Network I/O</stringProp>
            <stringProp name="-2032704893">bytessent</stringProp>
          </collectionProp>
          <collectionProp name="-368573183">
            <stringProp name="-1280936562">${__P(js2)}</stringProp>
            <stringProp reference="../../collectionProp[2]/stringProp[2]"/>
            <stringProp name="-274342153">Network I/O</stringProp>
            <stringProp name="-2032704893">bytessent</stringProp>
          </collectionProp>
          <collectionProp name="696768198">
            <stringProp name="-1280935601">${__P(js3)}</stringProp>
            <stringProp reference="../../collectionProp/stringProp[2]"/>
            <stringProp name="66952">CPU</stringProp>
            <stringProp reference="../../collectionProp/stringProp[4]"/>
          </collectionProp>
          <collectionProp name="2035312797">
            <stringProp name="-1280935601">${__P(js3)}</stringProp>
            <stringProp reference="../../collectionProp[2]/stringProp[2]"/>
            <stringProp reference="../../collectionProp[4]/stringProp[3]"/>
            <stringProp reference="../../collectionProp[4]/stringProp[4]"/>
          </collectionProp>
        </collectionProp>
      </kg.apc.jmeter.perfmon.PerfMonCollector>
      <hashTree/>
      <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.ResponseTimesOverTimeGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Response Times Over Time" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <threadCounts>true</threadCounts>
          </value>
        </objProp>
        <stringProp name="filename">${__P(report8)}.csv</stringProp>
        <longProp name="interval_grouping">500</longProp>
        <boolProp name="graph_aggregated">false</boolProp>
        <stringProp name="include_sample_labels"></stringProp>
        <stringProp name="exclude_sample_labels"></stringProp>
        <stringProp name="start_offset"></stringProp>
        <stringProp name="end_offset"></stringProp>
        <boolProp name="include_checkbox_state">false</boolProp>
        <boolProp name="exclude_checkbox_state">false</boolProp>
      </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
      <hashTree/>
      <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.ThreadsStateOverTimeGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Active Threads Over Time" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <threadCounts>true</threadCounts>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
        <longProp name="interval_grouping">500</longProp>
        <boolProp name="graph_aggregated">false</boolProp>
        <stringProp name="include_sample_labels"></stringProp>
        <stringProp name="exclude_sample_labels"></stringProp>
        <stringProp name="start_offset"></stringProp>
        <stringProp name="end_offset"></stringProp>
        <boolProp name="include_checkbox_state">false</boolProp>
        <boolProp name="exclude_checkbox_state">false</boolProp>
      </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">true</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <threadCounts>true</threadCounts>
          </value>
        </objProp>
        <stringProp name="filename">${__P(report9)}.csv</stringProp>
      </ResultCollector>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Query Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${__P(nquerythreads)}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1445299052000</longProp>
        <longProp name="ThreadGroup.end_time">1445299052000</longProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">${__P(duration)}</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
          <stringProp name="ConstantTimer.delay">5000</stringProp>
        </ConstantTimer>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="All queries transaction" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Count By Rating" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;query&quot;: {&#xd;
    &quot;bool&quot;: {&#xd;
      &quot;must&quot;: [&#xd;
        {&#xd;
          &quot;range&quot;: {&#xd;
            &quot;DateTimeReceivedUtc&quot;: {&#xd;
              &quot;gte&quot;: &quot;now-15m&quot;,&#xd;
              &quot;lte&quot;: &quot;now&quot;&#xd;
            }&#xd;
          }&#xd;
        }&#xd;
      ],&#xd;
      &quot;must_not&quot;: [],&#xd;
      &quot;should&quot;: []&#xd;
    }&#xd;
  },&#xd;
  &quot;from&quot;: 0,&#xd;
  &quot;size&quot;: 0,&#xd;
  &quot;aggs&quot;: {&#xd;
    &quot;2&quot;: {&#xd;
      &quot;terms&quot;: {&#xd;
        &quot;field&quot;: &quot;Rating&quot;,&#xd;
        &quot;size&quot;: 5,&#xd;
        &quot;order&quot;: {&#xd;
          &quot;_count&quot;: &quot;desc&quot;&#xd;
        }&#xd;
      }&#xd;
    }&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${__P(elasticip)}</stringProp>
            <stringProp name="HTTPSampler.port">9200</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${__P(indexname)}/ctip/_search</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Count Over Time" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;query&quot;: {&#xd;
    &quot;bool&quot;: {&#xd;
      &quot;must&quot;: [&#xd;
        {&#xd;
          &quot;range&quot;: {&#xd;
            &quot;DateTimeReceivedUtc&quot;: {&#xd;
              &quot;gte&quot;: &quot;now-15m&quot;,&#xd;
              &quot;lte&quot;: &quot;now&quot;&#xd;
            }&#xd;
          }&#xd;
        }&#xd;
      ],&#xd;
      &quot;must_not&quot;: [],&#xd;
      &quot;should&quot;: []&#xd;
    }&#xd;
  },&#xd;
  &quot;from&quot;: 0,&#xd;
  &quot;size&quot;: 0,&#xd;
  &quot;sort&quot;: [],&#xd;
  &quot;aggs&quot;: {&#xd;
    &quot;2&quot;: {&#xd;
      &quot;date_histogram&quot;: {&#xd;
        &quot;field&quot;: &quot;DateTimeReceivedUtc&quot;,&#xd;
        &quot;interval&quot;: &quot;5m&quot;,&#xd;
        &quot;time_zone&quot;: &quot;America/Los_Angeles&quot;,&#xd;
        &quot;min_doc_count&quot;: 1,&#xd;
        &quot;extended_bounds&quot;: {&#xd;
          &quot;min&quot;: &quot;now-15m&quot;,&#xd;
          &quot;max&quot;: &quot;now&quot;&#xd;
        }&#xd;
      }&#xd;
    }&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${__P(elasticip)}</stringProp>
            <stringProp name="HTTPSampler.port">9200</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${__P(indexname)}/ctip/_search</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Hits By Country Broken Out By Rating" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;query&quot;: {&#xd;
    &quot;filtered&quot;: {&#xd;
      &quot;query&quot;: {&#xd;
        &quot;query_string&quot;: {&#xd;
          &quot;query&quot;: &quot;*&quot;,&#xd;
          &quot;analyze_wildcard&quot;: true&#xd;
        }&#xd;
      },&#xd;
      &quot;filter&quot;: {&#xd;
        &quot;bool&quot;: {&#xd;
          &quot;must&quot;: [&#xd;
            {&#xd;
              &quot;query&quot;: {&#xd;
                &quot;query_string&quot;: {&#xd;
                  &quot;query&quot;: &quot;*&quot;,&#xd;
                  &quot;analyze_wildcard&quot;: true&#xd;
                }&#xd;
              }&#xd;
            },&#xd;
            {&#xd;
              &quot;range&quot;: {&#xd;
                &quot;DateTimeReceivedUtc&quot;: {&#xd;
                  &quot;gte&quot;: &quot;now-15m&quot;,&#xd;
                  &quot;lte&quot;: &quot;now&quot;,&#xd;
                  &quot;format&quot;: &quot;epoch_millis&quot;&#xd;
                }&#xd;
              }&#xd;
            }&#xd;
          ],&#xd;
          &quot;must_not&quot;: []&#xd;
        }&#xd;
      }&#xd;
    }&#xd;
  },&#xd;
  &quot;size&quot;: 0,&#xd;
  &quot;aggs&quot;: {&#xd;
    &quot;2&quot;: {&#xd;
      &quot;terms&quot;: {&#xd;
        &quot;field&quot;: &quot;Rating&quot;,&#xd;
        &quot;size&quot;: 5,&#xd;
        &quot;order&quot;: {&#xd;
          &quot;_count&quot;: &quot;desc&quot;&#xd;
        }&#xd;
      },&#xd;
      &quot;aggs&quot;: {&#xd;
        &quot;3&quot;: {&#xd;
          &quot;terms&quot;: {&#xd;
            &quot;field&quot;: &quot;SourceIpCountryCode&quot;,&#xd;
            &quot;size&quot;: 15,&#xd;
            &quot;order&quot;: {&#xd;
              &quot;_count&quot;: &quot;desc&quot;&#xd;
            }&#xd;
          }&#xd;
        }&#xd;
      }&#xd;
    }&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${__P(elasticip)}</stringProp>
            <stringProp name="HTTPSampler.port">9200</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${__P(indexname)}/ctip/_search</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Top 15 Organizations" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;query&quot;: {&#xd;
    &quot;filtered&quot;: {&#xd;
      &quot;query&quot;: {&#xd;
        &quot;query_string&quot;: {&#xd;
          &quot;query&quot;: &quot;*&quot;,&#xd;
          &quot;analyze_wildcard&quot;: true&#xd;
        }&#xd;
      },&#xd;
      &quot;filter&quot;: {&#xd;
        &quot;bool&quot;: {&#xd;
          &quot;must&quot;: [&#xd;
            {&#xd;
              &quot;query&quot;: {&#xd;
                &quot;query_string&quot;: {&#xd;
                  &quot;query&quot;: &quot;*&quot;,&#xd;
                  &quot;analyze_wildcard&quot;: true&#xd;
                }&#xd;
              }&#xd;
            },&#xd;
            {&#xd;
              &quot;range&quot;: {&#xd;
                &quot;DateTimeReceivedUtc&quot;: {&#xd;
                  &quot;gte&quot;: &quot;now-15m&quot;,&#xd;
                  &quot;lte&quot;: &quot;now&quot;,&#xd;
                  &quot;format&quot;: &quot;epoch_millis&quot;&#xd;
                }&#xd;
              }&#xd;
            }&#xd;
          ],&#xd;
          &quot;must_not&quot;: []&#xd;
        }&#xd;
      }&#xd;
    }&#xd;
  },&#xd;
  &quot;size&quot;: 0,&#xd;
  &quot;aggs&quot;: {&#xd;
    &quot;2&quot;: {&#xd;
      &quot;terms&quot;: {&#xd;
        &quot;field&quot;: &quot;Organization&quot;,&#xd;
        &quot;size&quot;: 15,&#xd;
        &quot;order&quot;: {&#xd;
          &quot;_count&quot;: &quot;desc&quot;&#xd;
        }&#xd;
      }&#xd;
    }&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${__P(elasticip)}</stringProp>
            <stringProp name="HTTPSampler.port">9200</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${__P(indexname)}/ctip/_search</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Total Hits Count" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;query&quot;: {&#xd;
    &quot;filtered&quot;: {&#xd;
      &quot;query&quot;: {&#xd;
        &quot;query_string&quot;: {&#xd;
          &quot;query&quot;: &quot;*&quot;,&#xd;
          &quot;analyze_wildcard&quot;: true&#xd;
        }&#xd;
      },&#xd;
      &quot;filter&quot;: {&#xd;
        &quot;bool&quot;: {&#xd;
          &quot;must&quot;: [&#xd;
            {&#xd;
              &quot;query&quot;: {&#xd;
                &quot;query_string&quot;: {&#xd;
                  &quot;analyze_wildcard&quot;: true,&#xd;
                  &quot;query&quot;: &quot;*&quot;&#xd;
                }&#xd;
              }&#xd;
            },&#xd;
            {&#xd;
              &quot;range&quot;: {&#xd;
                &quot;DateTimeReceivedUtc&quot;: {&#xd;
                  &quot;gte&quot;: &quot;now-15m&quot;,&#xd;
                  &quot;lte&quot;: &quot;now&quot;,&#xd;
                  &quot;format&quot;: &quot;epoch_millis&quot;&#xd;
                }&#xd;
              }&#xd;
            }&#xd;
          ],&#xd;
          &quot;must_not&quot;: []&#xd;
        }&#xd;
      }&#xd;
    }&#xd;
  },&#xd;
  &quot;size&quot;: 0,&#xd;
  &quot;aggs&quot;: {}&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${__P(elasticip)}</stringProp>
            <stringProp name="HTTPSampler.port">9200</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${__P(indexname)}/ctip/_search</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Unique Count Organizations" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;query&quot;: {&#xd;
    &quot;filtered&quot;: {&#xd;
      &quot;query&quot;: {&#xd;
        &quot;query_string&quot;: {&#xd;
          &quot;query&quot;: &quot;*&quot;,&#xd;
          &quot;analyze_wildcard&quot;: true&#xd;
        }&#xd;
      },&#xd;
      &quot;filter&quot;: {&#xd;
        &quot;bool&quot;: {&#xd;
          &quot;must&quot;: [&#xd;
            {&#xd;
              &quot;query&quot;: {&#xd;
                &quot;query_string&quot;: {&#xd;
                  &quot;query&quot;: &quot;*&quot;,&#xd;
                  &quot;analyze_wildcard&quot;: true&#xd;
                }&#xd;
              }&#xd;
            },&#xd;
            {&#xd;
              &quot;range&quot;: {&#xd;
                &quot;DateTimeReceivedUtc&quot;: {&#xd;
                  &quot;gte&quot;: &quot;now-15m&quot;,&#xd;
                  &quot;lte&quot;: &quot;now&quot;,&#xd;
                  &quot;format&quot;: &quot;epoch_millis&quot;&#xd;
                }&#xd;
              }&#xd;
            }&#xd;
          ],&#xd;
          &quot;must_not&quot;: []&#xd;
        }&#xd;
      }&#xd;
    }&#xd;
  },&#xd;
  &quot;size&quot;: 0,&#xd;
  &quot;aggs&quot;: {&#xd;
    &quot;2&quot;: {&#xd;
      &quot;cardinality&quot;: {&#xd;
        &quot;field&quot;: &quot;Organization&quot;&#xd;
      }&#xd;
    }&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${__P(elasticip)}</stringProp>
            <stringProp name="HTTPSampler.port">9200</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${__P(indexname)}/ctip/_search</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Unique Ip Count" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;query&quot;: {&#xd;
    &quot;filtered&quot;: {&#xd;
      &quot;query&quot;: {&#xd;
        &quot;query_string&quot;: {&#xd;
          &quot;query&quot;: &quot;*&quot;,&#xd;
          &quot;analyze_wildcard&quot;: true&#xd;
        }&#xd;
      },&#xd;
      &quot;filter&quot;: {&#xd;
        &quot;bool&quot;: {&#xd;
          &quot;must&quot;: [&#xd;
            {&#xd;
              &quot;query&quot;: {&#xd;
                &quot;query_string&quot;: {&#xd;
                  &quot;query&quot;: &quot;*&quot;,&#xd;
                  &quot;analyze_wildcard&quot;: true&#xd;
                }&#xd;
              }&#xd;
            },&#xd;
            {&#xd;
              &quot;range&quot;: {&#xd;
                &quot;DateTimeReceivedUtc&quot;: {&#xd;
                  &quot;gte&quot;: &quot;now-15m&quot;,&#xd;
                  &quot;lte&quot;: &quot;now&quot;,&#xd;
                  &quot;format&quot;: &quot;epoch_millis&quot;&#xd;
                }&#xd;
              }&#xd;
            }&#xd;
          ],&#xd;
          &quot;must_not&quot;: []&#xd;
        }&#xd;
      }&#xd;
    }&#xd;
  },&#xd;
  &quot;size&quot;: 0,&#xd;
  &quot;aggs&quot;: {&#xd;
    &quot;2&quot;: {&#xd;
      &quot;cardinality&quot;: {&#xd;
        &quot;field&quot;: &quot;SourceIp&quot;&#xd;
      }&#xd;
    }&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${__P(elasticip)}</stringProp>
            <stringProp name="HTTPSampler.port">9200</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/${__P(indexname)}/ctip/_search</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
